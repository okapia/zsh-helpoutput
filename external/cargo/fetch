cargo-fetch 
Fetch dependencies of a package from the network

USAGE:
    cargo fetch [OPTIONS]

OPTIONS:
    -q, --quiet                   No output printed to stdout
        --manifest-path <PATH>    Path to Cargo.toml
        --target <TRIPLE>         Fetch dependencies for the target triple
    -v, --verbose                 Use verbose output (-vv very verbose/build.rs output)
        --color <WHEN>            Coloring: auto, always, never
        --frozen                  Require Cargo.lock and cache are up to date
        --locked                  Require Cargo.lock is up to date
    -Z <FLAG>...                  Unstable (nightly-only) flags to Cargo, see 'cargo -Z help' for details
    -h, --help                    Prints help information

If a lock file is available, this command will ensure that all of the Git
dependencies and/or registries dependencies are downloaded and locally
available. The network is never touched after a `cargo fetch` unless
the lock file changes.

If the lock file is not available, then this is the equivalent of
`cargo generate-lockfile`. A lock file is generated and dependencies are also
all updated.
