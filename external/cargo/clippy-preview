cargo-clippy-preview 
Checks a package to catch common mistakes and improve your Rust code.

USAGE:
    cargo clippy-preview [OPTIONS]

OPTIONS:
    -p, --package <SPEC>...         Package(s) to check
        --all                       Check all packages in the workspace
        --exclude <SPEC>...         Exclude packages from the check
    -j, --jobs <N>                  Number of parallel jobs, defaults to # of CPUs
        --lib                       Check only this package's library
        --bin <NAME>...             Check only the specified binary
        --bins                      Check all binaries
        --example <NAME>...         Check only the specified example
        --examples                  Check all examples
        --test <NAME>...            Check only the specified test target
        --tests                     Check all tests
        --bench <NAME>...           Check only the specified bench target
        --benches                   Check all benches
        --all-targets               Check all targets
        --release                   Check artifacts in release mode, with optimizations
        --features <FEATURES>       Space-separated list of features to activate
        --all-features              Activate all available features
        --no-default-features       Do not activate the `default` feature
        --target <TRIPLE>           Check for the target triple
        --target-dir <DIRECTORY>    Directory for all generated artifacts
        --manifest-path <PATH>      Path to Cargo.toml
        --message-format <FMT>      Error format [default: human]  [possible values: human, json, short]
    -v, --verbose                   Use verbose output (-vv very verbose/build.rs output)
        --color <WHEN>              Coloring: auto, always, never
        --frozen                    Require Cargo.lock and cache are up to date
        --locked                    Require Cargo.lock is up to date
    -Z <FLAG>...                    Unstable (nightly-only) flags to Cargo, see 'cargo -Z help' for details
    -h, --help                      Prints help information

If the `--package` argument is given, then SPEC is a package ID specification
which indicates which package should be built. If it is not given, then the
current package is built. For more information on SPEC and its format, see the
`cargo help pkgid` command.

All packages in the workspace are checked if the `--all` flag is supplied. The
`--all` flag is automatically assumed for a virtual manifest.
Note that `--exclude` has to be specified in conjunction with the `--all` flag.

To allow or deny a lint from the command line you can use `cargo clippy --`
with:

    -W --warn OPT       Set lint warnings
    -A --allow OPT      Set lint allowed
    -D --deny OPT       Set lint denied
    -F --forbid OPT     Set lint forbidden

You can use tool lints to allow or deny lints from your code, eg.:

    #[allow(clippy::needless_lifetimes)]
