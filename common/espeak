
eSpeak text-to-speech: 1.40  22.Dec.08

speak [options] ["<words>"]

-f <text file>   Text file to speak
--stdin    Read text input from stdin instead of a file

If neither -f nor --stdin, <words> are spoken, or if none then text is
spoken from stdin, each line separately.

-a <integer>
	   Amplitude, 0 to 200, default is 100
-g <integer>
	   Word gap. Pause between words, units of 10mS at the default speed
-l <integer>
	   Line length. If not zero (which is the default), consider
	   lines less than this length as end-of-clause
-p <integer>
	   Pitch adjustment, 0 to 99, default is 50
-s <integer>
	   Speed in words per minute, 80 to 390, default is 170
-v <voice name>
	   Use voice file of this name from espeak-data/voices
-w <wave file name>
	   Write output to this WAV file, rather than speaking it directly
-b	   Input text is 8-bit encoding
-m	   Interpret SSML markup, and ignore other < > tags
-q	   Quiet, don't produce any speech (may be useful with -x)
-x	   Write phoneme mnemonics to stdout
-X	   Write phonemes mnemonics and translation trace to stdout
-z	   No final sentence pause at the end of the text
--stdout   Write speech output to stdout
--compile=<voice name>
	   Compile the pronunciation rules and dictionary in the current
	   directory. =<voice name> is optional and specifies which language
--path="<path>"
	   Specifies the directory containing the espeak-data directory
--phonout="<filename>"
	   Write output from -x -X commands and mbrola phoneme data to this file
--punct="<characters>"
	   Speak the names of punctuation characters during speaking.  If
	   =<characters> is omitted, all punctuation is spoken.
--split="<minutes>"
	   Starts a new WAV file every <minutes>.  Used with -w
--voices=<language>
	   List the available voices for the specified language.
	   If <language> is omitted, then list all voices.
-k <integer>
	   Indicate capital letters with: 1=sound, 2=the word "capitals",
	   higher values = a pitch increase (try -k20).
